<?php//文章列表页class类class ArticleAction extends Action{	//显示文章列表页	public function index(){		$type = M("Type");		//路径		$tlist = $type->where("id={$_GET['tid']}")->select();		$this->assign("tlist",$tlist);		//热门分类信息		$type_res = $type->where("isshow=1 and pid=2")->select();		$this->assign("type",$type_res);		$art = D("Article");		//热评文章信息		$hotart = $art->relation("uname")->field("id,title,uid,comments")->where("status=2")->order("comments desc")->limit(5)->select();		//dump($hotart);		$this->assign("hotart",$hotart);		//遍历本周热点		$time = date("w",time())+1;		//dump($time);		$wetime = time()-3600*$time*24;		$welist = $art->where("status=2 and addtime>{$wetime}")->order("views desc")->limit(5)->select();		$this->assign("welist",$welist);		//遍历本月热点		$mouth = date("d",time());		$motime = time()-3600*$mouth*24;		$molist = $art->where("status=2 and addtime>{$motime}")->order("views desc")->limit(5)->select();		$this->assign("molist",$molist);		//查询文章详情信息		import('ORG.Util.Page');// 导入分页类		//计算总数据条数		if(isset($_GET['tid'])){			$arcount = $art->where("typeid={$_GET['tid']} and status=2")->count();		}else{			$arcount = $art->where("status=2")->count();		}		$Page = new Page($arcount,9);// 实例化分页类 传入总记录数和每页显示的记录数		$Page->setConfig('theme',"%first% %prePage% %linkPage% %nextPage% %end% %upPage% %downPage%");		$show = $Page->show();// 分页显示输出		//查询符合条件的文章信息		switch ($_GET['order']) {			case 1:				$order=' praise desc ';				break;			case 2:				$order=' views desc ';				break;			case 3:				$order=' comments desc';				break;			default:				$order='  addtime desc ';				break;		}				if(isset($_GET['tid'])){			$art_res = $art->relation(true)->where("typeid={$_GET['tid']} and status=2")->order($order)->limit($Page->firstRow.','.$Page->listRows)->select();		}else{			$art_res = $art->relation(true)->where("status=2")->order($order)->limit($Page->firstRow.','.$Page->listRows)->select();		}		$this->assign("arcount",$arcount); //赋值数据条数输出		$this->assign("art",$art_res);		$this->assign('page',$show);// 赋值分页输出		//活跃者		$user = D("User");		$ulist = $user->relation(true)->field('id,username,image')->where("status=0")->limit(20)->select();		foreach($ulist as $k=>$v){			$ulist[$k]["acount"] = count($v['aname']);		}		//dump($ulist);		$this->assign("ulist",$ulist);		//活跃度最高文章		$alist=M('')->query("select typeid,count('id') c ,t.name from os_article a,os_type t where a.typeid=t.id   group by typeid order by c desc limit 5");		$this->assign('alist',$alist);		$this->display("article");	}	public function dopraise(){		$m=M('Collect');//先查一下是否收藏过		$art = M("Article");		$result=$m->where("aid={$_POST['aid']} and uid='{$_SESSION['loginuser']['uid']}'")->find();		if($result&&$result>0){			//已收藏			$res = $art->where("id='{$_POST['aid']}'")->getField("praise");			echo $res;		}else{			$_POST['addtime']=time();			$m->create();		//	dump($data);			$m->add();//更新收藏表			//更新文章表			M()->query("update os_article set praise = praise+1 where id = {$_POST['aid']}");						$res = $art->where("id='{$_POST['aid']}}'")->getField("praise");			echo $res;		}			}	public function notpraise(){		$msg=M('Article');		$m=M('Collect');		$aid=$_POST['aid'];		$uid=$_POST['uid'];		//从收藏表删除此收藏		$m->where("uid={$uid} and aid={$aid}")->delete();	//	M()->query("delete from os_msgcollect where uid={$uid} and mid={$mid}");		//将文章修改 收藏量-1		M()->query("update os_article set praise = praise-1 where id = {$_POST['aid']}");		$res = $msg->where("id='{$_POST['aid']}}'")->getField("praise");		//得到新的收藏量		echo $res;	}	//修改：用户每点击一次文章文章浏览数加1	public function update(){		$art = D("Article");		$art_res = $art->relation(true)->where(" id={$_GET['aid']}")->select();		//dump($art_res);		$aid=$_GET["aid"];		//unset($_COOKIE['recently']);		//浏览记录写入cookie		if(!isset($_COOKIE['recently'])){			cookie('recently',$aid);			}else{					$new=$aid.",".cookie('recently');				$arr=explode(',',$new);					if(count($arr)>6){						array_pop($arr);					}				$news=implode(',',$arr);					cookie('recently',$news);				}				//DUMP($_COOKIE);		$art_res[0]['views']+=1;		$data['views'] = $art_res[0]['views'];		$art->where("id={$_GET['aid']}")->data($data)->save();		$this->assign("art",$art_res);		//查询文章收藏信息		if($_SESSION['loginuser']==''){			//没有登陆			$colinfo=0;		}else{			//用户登陆了 查询用户是否收藏			$m=M('Collect');			$res=$m->where("aid={$_GET['aid']} && uid={$_SESSION['loginuser']['uid']}")->find();			if($res&&$res>0){				$colinfo=2;//已收藏			}else{				$colinfo=1;//未收藏			}		}		$this->assign('colinfo',$colinfo);		//查询文章评论信息		$com = D("Articlecom");		import('ORG.Util.Page');// 导入分页类		$comcount = $com->where("aid={$_GET['aid']}")->count();		$Page = new Page($comcount,10);		$Page->setConfig('theme',"%first% %prePage% %linkPage% %nextPage% %end% %upPage% %downPage%"); //确定分页格式		$show = $Page->show();		$comlist = $com->relation(true)->where("aid={$_GET['aid']} and status=1")->limit($Page->firstRow.','.$Page->listRows)->select();		$this->assign("comlist",$comlist);		$this->assign('page',$show);// 赋值分页输出		//查询评论回复		$mod = D("Reply");		$str = array();		foreach($comlist as $v){			$str[] = $v['id'];		}		$str = implode(",",$str);		$reply = $mod->relation(true)->where("pid in({$str})")->order("replytime asc")->select();		$this->assign("reply",$reply);		//查询15个关键字		$keyword = $art->order("views desc")->limit(15)->select();		$this->assign("keyword",$keyword);		$this->display("details");	}	//添加评论方法	public function insertcom(){		//判断验证码		if(md5($_POST['code'])!=$_SESSION['code1']){			$this->error('验证码错误');			exit();		}		$mod = M("Article");		$arlist = $mod->where("id={$_POST['aid']}")->select();		//dump($melist);		$data['comments'] = $arlist[0]['comments']+1;		$mod->where("id={$_POST['aid']}")->data($data)->save();		//执行评论添加		$mecom = M("Articlecom");		$mecom->create();		$newid=$mecom->add();		$aid=M('Articlecom')->where("id={$newid}")->getField('aid');//帖子id		$uid=M('Article')->where("id={$aid}")->getField('uid');//发帖子人id		$m=M('News');//向消息表里插入消息通知		$data['cid']=$newid;		$data['uid']=$uid;		$data['addtime']=time();		$m->add($data);		$this->success("评论成功");	}	public function insertreply(){		//判断验证码		$uname=$_SESSION['loginuser']['uname'];		if(md5($_POST['code'])!=$_SESSION['code1']){			echo 1;			exit();		}		$_POST['replytime']=time();		$mod = M("Reply");		$mod->create();		$newid=$mod->add();		$newrep=$mod->find($newid);		$str="<div class='ref' ><b>".date('Y-m-d H:i',$newrep['replytime'])."{$uname}回复:</b><h4>".$newrep['content']."</h4></div>";		echo $str;	}}